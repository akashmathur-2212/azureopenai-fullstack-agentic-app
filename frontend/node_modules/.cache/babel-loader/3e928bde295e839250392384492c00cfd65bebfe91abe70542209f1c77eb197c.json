{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash.mathur\\\\OneDrive - CGI\\\\Desktop\\\\Akash\\\\Study\\\\GenAI\\\\BlueGen\\\\backend\\\\bluegen-app\\\\src\\\\components\\\\ChatbotPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotPage = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [response, setResponse] = useState('');\n  const [sessionId] = useState(() => crypto.randomUUID());\n  const handleQuery = async () => {\n    const formData = new FormData();\n    formData.append('session_id', sessionId);\n    formData.append('query', query);\n    try {\n      const res = await axios.post('http://localhost:8000/query', formData);\n      setResponse(res.data.response || JSON.stringify(res.data));\n    } catch (err) {\n      console.error(err);\n      setResponse('Error processing query');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat with Document\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 4,\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleQuery,\n      children: \"Ask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatbotPage, \"Vgu93zXE0cjuss9HVF2KKqwPIZE=\");\n_c = ChatbotPage;\nexport default ChatbotPage;\nvar _c;\n$RefreshReg$(_c, \"ChatbotPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatbotPage","_s","query","setQuery","response","setResponse","sessionId","crypto","randomUUID","handleQuery","formData","FormData","append","res","post","data","JSON","stringify","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/akash.mathur/OneDrive - CGI/Desktop/Akash/Study/GenAI/BlueGen/backend/bluegen-app/src/components/ChatbotPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ChatbotPage = () => {\r\n    const [query, setQuery] = useState('');\r\n    const [response, setResponse] = useState('');\r\n    const [sessionId] = useState(() => crypto.randomUUID());\r\n\r\n    const handleQuery = async () => {\r\n        const formData = new FormData();\r\n        formData.append('session_id', sessionId);\r\n        formData.append('query', query);\r\n\r\n        try {\r\n            const res = await axios.post('http://localhost:8000/query', formData);\r\n            setResponse(res.data.response || JSON.stringify(res.data));\r\n        } catch (err) {\r\n            console.error(err);\r\n            setResponse('Error processing query');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Chat with Document</h2>\r\n            <textarea rows={4} value={query} onChange={(e) => setQuery(e.target.value)} />\r\n            <br />\r\n            <button onClick={handleQuery}>Ask</button>\r\n            <div>\r\n                <h4>Response:</h4>\r\n                <p>{response}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatbotPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,SAAS,CAAC,GAAGV,QAAQ,CAAC,MAAMW,MAAM,CAACC,UAAU,CAAC,CAAC,CAAC;EAEvD,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEN,SAAS,CAAC;IACxCI,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEV,KAAK,CAAC;IAE/B,IAAI;MACA,MAAMW,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,6BAA6B,EAAEJ,QAAQ,CAAC;MACrEL,WAAW,CAACQ,GAAG,CAACE,IAAI,CAACX,QAAQ,IAAIY,IAAI,CAACC,SAAS,CAACJ,GAAG,CAACE,IAAI,CAAC,CAAC;IAC9D,CAAC,CAAC,OAAOG,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBb,WAAW,CAAC,wBAAwB,CAAC;IACzC;EACJ,CAAC;EAED,oBACIN,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3B1B,OAAA;MAAU2B,IAAI,EAAE,CAAE;MAACC,KAAK,EAAEzB,KAAM;MAAC0B,QAAQ,EAAGC,CAAC,IAAK1B,QAAQ,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9E1B,OAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN1B,OAAA;MAAQgC,OAAO,EAAEtB,WAAY;MAAAY,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1C1B,OAAA;MAAAsB,QAAA,gBACItB,OAAA;QAAAsB,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB1B,OAAA;QAAAsB,QAAA,EAAIjB;MAAQ;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACxB,EAAA,CA/BID,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAiCjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}